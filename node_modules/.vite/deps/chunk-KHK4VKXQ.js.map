{
  "version": 3,
  "sources": ["../../vuetify/src/composables/border.ts", "../../vuetify/src/composables/elevation.ts", "../../vuetify/src/composables/rounded.ts", "../../vuetify/src/composables/position.ts"],
  "sourcesContent": ["// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface BorderProps {\n  border?: boolean | number | string\n}\n\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String],\n}, 'border')\n\nexport function useBorder (\n  props: BorderProps,\n  name = getCurrentInstanceName(),\n) {\n  const borderClasses = computed(() => {\n    const classes: string[] = []\n\n    if (props.border != null && props.border !== false) {\n      classes.push(`${name}--border`)\n    }\n\n    if (\n      (typeof props.border === 'string' && props.border !== '') ||\n      props.border === 0\n    ) {\n      for (const value of String(props.border).split(' ')) {\n        classes.push(`border-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { borderClasses }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nexport interface ElevationProps {\n  elevation?: number | string | null\n}\n\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator (v: any) {\n      const value = parseInt(v)\n\n      return (\n        !isNaN(value) &&\n        value >= 0 &&\n        // Material Design has a maximum elevation of 24\n        // https://material.io/design/environment/elevation.html#default-elevations\n        value <= 24\n      )\n    },\n  },\n}, 'elevation')\n\ntype ElevationData = {\n  elevationClasses: Ref<string[]>\n}\n\nexport function useElevation (props: ElevationProps | Ref<number | string | undefined>): ElevationData {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation\n    const classes: string[] = []\n\n    if (elevation == null) return classes\n\n    classes.push(`elevation-${elevation}`)\n\n    return classes\n  })\n\n  return { elevationClasses }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\ntype RoundedValue = boolean | string | number | null | undefined\n\nexport interface RoundedProps {\n  rounded?: RoundedValue\n  tile?: boolean\n}\n\ntype RoundedData = {\n  roundedClasses: Ref<string[]>\n}\n\n// Composables\nexport const makeRoundedProps = propsFactory({\n  rounded: {\n    type: [Boolean, Number, String],\n    default: undefined,\n  },\n}, 'rounded')\n\nexport function useRounded (\n  props: RoundedProps | Ref<RoundedValue>,\n  name = getCurrentInstanceName(),\n): RoundedData {\n  const roundedClasses = computed(() => {\n    const rounded = isRef(props) ? props.value : props.rounded\n    const classes: string[] = []\n\n    if (rounded === true || rounded === '') {\n      classes.push(`${name}--rounded`)\n    } else if (\n      typeof rounded === 'string' ||\n      rounded === 0\n    ) {\n      for (const value of String(rounded).split(' ')) {\n        classes.push(`rounded-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { roundedClasses }\n}\n", "// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky'] as const\n\ntype Position = typeof positionValues[number]\n\nexport interface PositionProps {\n  absolute?: boolean\n  bottom?: boolean | number | string\n  fixed?: boolean\n  left?: boolean | number | string\n  position?: Position\n  right?: boolean | number | string\n  top?: boolean | number | string\n}\n\n// Composables\nexport const makePositionProps = propsFactory({\n  absolute: Boolean,\n  bottom: [Boolean, Number, String],\n  fixed: Boolean,\n  left: [Boolean, Number, String],\n  position: {\n    type: String as PropType<Position>,\n    validator: /* istanbul ignore next */ (v: any) => positionValues.includes(v),\n  },\n  right: [Boolean, Number, String],\n  top: [Boolean, Number, String],\n}, 'position')\n\nexport function usePosition (\n  props: PositionProps,\n  name = getCurrentInstanceName(),\n) {\n  const targets = ['top', 'right', 'bottom', 'left'] as const\n\n  const positionClasses = computed(() => {\n    if (props.fixed) return `${name}--fixed`\n    if (props.absolute) return `${name}--absolute`\n\n    return props.position ? `position-${props.position}` : undefined\n  })\n\n  const positionStyles = computed(() => {\n    const styles: Partial<Record<typeof targets[number], string>> = {}\n\n    for (const target of targets) {\n      const prop = props[target]\n\n      if (prop == null || prop === false) continue\n\n      styles[target] = convertToUnit(prop === true ? '0' : String(prop))\n    }\n\n    return styles\n  })\n\n  return { positionClasses, positionStyles }\n}\n"],
  "mappings": "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",
  "names": []
}
