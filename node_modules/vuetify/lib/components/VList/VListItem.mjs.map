{"version":3,"sources":["../../../src/components/VList/VListItem.tsx"],"names":["VAvatar","VListItemAvatar","VListItemHeader","VListItemSubtitle","VListItemTitle","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","useList","Ripple","computed","onMounted","watch","genericComponent","useRender","useNestedItem","VListItem","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","link","prependAvatar","prependIcon","subtitle","title","value","variant","setup","attrs","slots","id","href","select","isSelected","root","parent","list","isActive","isExactActive","variantProps","color","textColor","open","val","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","slotProps","Tag","isLink","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","updateHasPrepend","undefined","e","navigate","density","default"],"mappings":"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","sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VListItemAvatar } from './VListItemAvatar'\nimport { VListItemHeader } from './VListItemHeader'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useList } from './list'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, onMounted, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\nimport { useNestedItem } from '@/composables/nested/nested'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { select, isSelected, root, parent } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value || isSelected.value\n    })\n    const variantProps = computed(() => {\n      const activeColor = props.activeColor ?? props.color\n      return {\n        color: isActive.value ? activeColor : props.color,\n        textColor: props.textColor,\n        variant: props.variant,\n      }\n    })\n\n    onMounted(() => {\n      if (link.isExactActive?.value && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    watch(() => link.isExactActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n    }))\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link || props.value != null)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && ((e: MouseEvent) => {\n            link.navigate?.(e)\n            select(!isSelected.value, e)\n          })}\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            slots.prepend\n              ? slots.prepend(slotProps.value)\n              : (\n                <VListItemAvatar left>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader>\n              { hasTitle && (\n                <VListItemTitle>\n                  { slots.title\n                    ? slots.title({ title: props.title })\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle({ subtitle: props.subtitle })\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            slots.append\n              ? slots.append(slotProps.value)\n              : (\n                <VListItemAvatar right>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n        </Tag>\n      )\n    })\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"],"file":"VListItem.mjs"}