{"version":3,"sources":["../../../src/components/VSwitch/VSwitch.tsx"],"names":["filterControlProps","makeSelectionControlProps","VSelectionControl","filterInputProps","makeVInputProps","VInput","VProgressCircular","LoaderSlot","makeLoaderProps","useLoader","useProxiedModel","computed","defineComponent","ref","filterInputAttrs","useRender","VSwitch","name","inheritAttrs","props","indeterminate","Boolean","inset","flat","emits","val","setup","attrs","slots","loaderClasses","loaderColor","loading","color","onChange","value","inputAttrs","controlAttrs","inputProps","_1","controlProps","_2","control","onClick","input","click","default","isDisabled","isReadonly","isValid","undefined","textColorClasses","slotProps","loader","isActive"],"mappings":"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","sourcesContent":["// Styles\nimport './VSwitch.sass'\n\n// Components\nimport { filterControlProps, makeSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, defineComponent, ref } from 'vue'\nimport { filterInputAttrs, useRender } from '@/util'\n\nexport const VSwitch = defineComponent({\n  name: 'VSwitch',\n\n  inheritAttrs: false,\n\n  props: {\n    indeterminate: Boolean,\n    inset: Boolean,\n    flat: Boolean,\n\n    ...makeLoaderProps(),\n    ...makeVInputProps(),\n    ...makeSelectionControlProps(),\n  },\n\n  emits: {\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const { loaderClasses } = useLoader(props)\n\n    const loaderColor = computed(() => {\n      return typeof props.loading === 'string' && props.loading !== ''\n        ? props.loading\n        : props.color\n    })\n\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [controlProps, _2] = filterControlProps(props)\n      const control = ref<VSelectionControl>()\n\n      function onClick () {\n        control.value?.input?.click()\n      }\n\n      return (\n        <VInput\n          class={[\n            'v-switch',\n            { 'v-switch--inset': props.inset },\n            { 'v-switch--indeterminate': indeterminate.value },\n            loaderClasses.value,\n          ]}\n          { ...inputAttrs }\n          { ...inputProps }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => (\n              <VSelectionControl\n                ref={ control }\n                { ...controlProps }\n                type=\"checkbox\"\n                onUpdate:modelValue={ onChange }\n                aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n              >\n                {{\n                  default: () => (<div class=\"v-switch__track\" onClick={ onClick }></div>),\n                  input: ({ textColorClasses }) => (\n                    <div\n                      class={[\n                        'v-switch__thumb',\n                        textColorClasses.value,\n                      ]}\n                    >\n                      { props.loading && (\n                        <LoaderSlot\n                          name=\"v-switch\"\n                          active\n                          color={ isValid.value === false ? undefined : loaderColor.value }\n                        >\n                          { slotProps => (\n                            slots.loader\n                              ? slots.loader(slotProps)\n                              : (\n                                  <VProgressCircular\n                                    active={ slotProps.isActive }\n                                    color={ slotProps.color }\n                                    indeterminate\n                                    size=\"16\"\n                                    width=\"2\"\n                                  />\n                              )\n                          )}\n                        </LoaderSlot>\n                      ) }\n                    </div>\n                  ),\n                }}\n              </VSelectionControl>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSwitch = InstanceType<typeof VSwitch>\n"],"file":"VSwitch.mjs"}