{"version":3,"sources":["../../../src/components/VBanner/VBanner.tsx"],"names":["VAvatar","VBannerActions","VBannerText","VDefaultsProvider","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useDisplay","defineComponent","useRender","VBanner","name","props","avatar","String","color","icon","lines","sticky","Boolean","text","setup","slots","themeClasses","borderClasses","densityClasses","dimensionStyles","mobile","elevationClasses","positionClasses","positionStyles","roundedClasses","hasAvatar","hasText","hasContent","default","value","density","image","actions","VBtn","variant"],"mappings":"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","sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VBannerActions } from './VBannerActions'\nimport { VBannerText } from './VBannerText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useDisplay } from '@/composables/display'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VBanner = defineComponent({\n  name: 'VBanner',\n\n  props: {\n    avatar: String,\n    color: String,\n    icon: String,\n    lines: String as PropType<'one' | 'two' | 'three'>,\n    sticky: Boolean,\n    text: String,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { mobile } = useDisplay()\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    useRender(() => {\n      const hasAvatar = !!(props.avatar || props.icon || slots.avatar || slots.icon)\n      const hasText = !!(props.text || slots.text)\n      const hasContent = hasAvatar || hasText || slots.default\n\n      return (\n        <props.tag\n          class={[\n            'v-banner',\n            {\n              'v-banner--mobile': mobile.value,\n              'v-banner--sticky': props.sticky,\n              [`v-banner--${props.lines}-line`]: true,\n            },\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            dimensionStyles.value,\n            positionStyles.value,\n          ]}\n          role=\"banner\"\n        >\n          { hasContent && (\n            <div class=\"v-banner__content\">\n              { hasAvatar && (\n                <VDefaultsProvider\n                  defaults={{\n                    VAvatar: {\n                      color: props.color,\n                      density: props.density,\n                      icon: props.icon,\n                      image: props.avatar,\n                    },\n                  }}\n                >\n                  <div class=\"v-banner__avatar\">\n                    { slots.avatar ? slots.avatar() : (<VAvatar />) }\n                  </div>\n                </VDefaultsProvider>\n              ) }\n\n              { hasText && (\n                <VBannerText>\n                  { slots.text ? slots.text() : props.text }\n                </VBannerText>\n              ) }\n\n              { slots.default?.() }\n            </div>\n          ) }\n\n          { slots.actions && (\n            <VDefaultsProvider\n              defaults={{\n                VBtn: {\n                  color: props.color,\n                  density: props.density,\n                  variant: 'text',\n                },\n              }}\n            >\n              <VBannerActions v-slots={{ default: slots.actions }} />\n            </VDefaultsProvider>\n          ) }\n        </props.tag>\n      )\n    })\n  },\n})\n\nexport type VBanner = InstanceType<typeof VBanner>\n"],"file":"VBanner.mjs"}